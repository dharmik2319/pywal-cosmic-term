import argparse
import os
import pathlib
from typing import Dict, List

import pyron


parser: argparse.ArgumentParser = argparse.ArgumentParser(
    "Use your pywal colorscheme with COSMIC Terminal")
parser.add_argument('--pywal-colors', type=pathlib.Path, nargs=1, help='Path to colors file generated by pywal',
                    default=pathlib.Path(os.environ['HOME']+'/.cache/wal/colors'), required=False)
parser.add_argument('--sample-ron', type=pathlib.Path, nargs=1,
                    help='Path to a .ron file for COSMIC Terminal (Either export one or download one', required=True)
parser.add_argument('--output', type=pathlib.Path, nargs=1,
                    help='Path to output file', default=pathlib.Path('pywal.ron'), required=False)

args: argparse.Namespace = parser.parse_args()

ron: Dict[str, str | Dict[str, str]] = pyron.load(
    path=str(args.sample_ron[0].absolute()))
with open(args.pywal_colors.absolute(), 'r') as file:
    colors: List[str] = file.read().split('\n')

ron['name'] = 'pywal'
ron['foreground'] = colors[15]
ron['cursor'] = colors[15]
ron['bright_foreground'] = colors[15]
ron['dim_foreground'] = colors[0]

ron['normal']['black'] = colors[0]
ron['normal']['red'] = colors[1]
ron['normal']['green'] = colors[2]
ron['normal']['yellow'] = colors[3]
ron['normal']['blue'] = colors[4]
ron['normal']['magenta'] = colors[5]
ron['normal']['cyan'] = colors[6]
ron['normal']['white'] = colors[7]

ron['bright']['black'] = colors[0]
ron['bright']['red'] = colors[1]
ron['bright']['green'] = colors[2]
ron['bright']['yellow'] = colors[3]
ron['bright']['blue'] = colors[4]
ron['bright']['magenta'] = colors[5]
ron['bright']['cyan'] = colors[6]
ron['bright']['white'] = colors[7]

ron['dim']['black'] = colors[0]
ron['dim']['red'] = colors[1]
ron['dim']['green'] = colors[2]
ron['dim']['yellow'] = colors[3]
ron['dim']['blue'] = colors[4]
ron['dim']['magenta'] = colors[5]
ron['dim']['cyan'] = colors[6]
ron['dim']['white'] = colors[7]

breakpoint()
ron_ls: List[str] = pyron.to_string(ron).replace(
    '{', '(').replace('}', ')').split('\n')
for i, _ in enumerate(ron_ls):
    ron_ls[i] = ron_ls[i].replace('"', '', 2)

with open(str(args.output.absolute()), 'w') as out:
    out.write(''.join(line+'\n' for line in ron_ls))
